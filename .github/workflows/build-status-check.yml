name: ✅Build Status Check
run-name: ✅Build Status Check (${{ github.base_ref }} branch)


defaults:
  run:
    shell: pwsh


on:
  pull_request_target:
    branches: [main, preview]


jobs:
  get_sdk_version:
    name: Get SDK Version
    runs-on: ubuntu-latest
    outputs:
      sdk-version: ${{ steps.get-sdk-version.outputs.sdk-version }}
    steps:
    - name: Get SDK Version From Environment Variable
      id: get-sdk-version
      run: |
        "sdk-version=${{ vars.NET_SDK_VERSION }}" >> $env:GITHUB_OUTPUT;


  build_branch_validator:
    name: Build ${{ vars.PROJECT_NAME }} Project
    needs: get_sdk_version
    uses: KinsonDigital/Infrastructure/.github/workflows/build-csharp-project.yml@v13.3.1
    with:
      project-name: "${{ vars.PROJECT_NAME }}"
      build-config: Debug
      net-sdk-version: "${{ needs.get_sdk_version.outputs.sdk-version }}"
      checkout-ref: ${{ github.event.pull_request.head.ref }}
      checkout-repository: ${{ github.event.pull_request.head.repo.full_name }}
    secrets:
      cicd-pat: ${{ secrets.CICD_TOKEN }}


  build_branch_validator_shared:
    name: Build ${{ vars.PROJECT_NAME }}Shared Project
    needs: get_sdk_version
    uses: KinsonDigital/Infrastructure/.github/workflows/build-csharp-project.yml@v13.3.1
    with:
      project-name: "${{ vars.PROJECT_NAME }}Shared"
      build-config: Debug
      net-sdk-version: "${{ needs.get_sdk_version.outputs.sdk-version }}"
      checkout-ref: ${{ github.event.pull_request.head.ref }}
      checkout-repository: ${{ github.event.pull_request.head.repo.full_name }}
    secrets:
      cicd-pat: ${{ secrets.CICD_TOKEN }}


  build_status_check:
    name: ${{ vars.PROJECT_NAME }} Build Status Check
    needs: [build_branch_validator, build_branch_validator_shared]
    runs-on: ubuntu-latest
    steps:
      - name: Print Status Check Pass Message
        run: Write-Host "::notice::✅Build Status Check Passed✅";
